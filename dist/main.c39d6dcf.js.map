{"version":3,"sources":["dom.ts","environment.ts","ajax.ts","bot-details.ts","../node_modules/regenerator-runtime/runtime.js","typings/send-api.ts","send-api.ts","main.ts"],"names":[],"mappings":"AIAA;AACA;AACA;AACA;AACA;AACA,AJLa,ACAA,AI2Pb,IAAY,GL3PC,ACAA,CDAA,ACAA,MI2Pb,IL3Pa,CCAA,EDAa,CCAC,ODAO,CAAC,cAAT,CAAwB,YAAxB,CAAb;AIMb,AFJA,ACFA,AHCa,ACAT,AKDJ,ELCI,EEDJ,AGAA,GNCa,CAAA,CECG,CIFhB,GAAA,IHAA,AHCa,CCAO,CCCpB,CAA8B,ACF9B,AHCyB,ACAH,AKDtB,CAAA,GLA2B,ECE3B,CCFA,CDE6C,ACF7C,AHCiC,CAAC,AMDlC,CAAA,aHAA,AHCyB,CGDzB,AHCiD,UAAxB,CAAZ;AIMb,AFJI,AFDS,ACAT,AIyPJ,CAAA,CJzPI,ICCM,CFDG,CAAA,GKyPD,EHxPK,GAAG,CFDP,ACAM,EAAE,CCCG,AFDC,CKyPzB,EAAsB,KLzPW,CAAC,ACFP,KCGP,EAAhB,OFDqB,CAAwB,MAAxB,CAAZ;AIMb,AFJI,ACHJ,AFEI,AKFJ,AD2PI,EHxPA,ADDA,AIyPA,EF3PJ,AGAA,KJGW,CAAC,ACHZ,EE2PI,CF3PJ,AE2PI,CHxPA,CAAa,EIHjB,GJGI,ACHJ,AGAA,CHAA,CDGwB,EDDE,EAAE,AIyPxB,CC3PJ,AD2PI,CHxP0B,AIH9B,CJG+B,ACH/B,CAAA,AE2PI,EHxPA,EAAgC,IAAhC,EDJuB,GKC3B,AD2PI,CC3PJ;AFQA,AFJI,AFDJ,ACAI,AIyPA,EHxPA,ADDA,AIyPA,OLzPY,CCAJ,ECCE,ADDA,AIyPV,CHxPW,AGwPX,OHxPU,EAAU,EFDxB,AKyPI,CLzP4B,AKyP5B,GHxP0B,AGwP1B,CHxP2B,CFD/B,EAA2F,OEC7E,AGwPV,CHxPA;AEKJ,AFJI,ACHJ,AHEI,ACAI,AKFR,AD2PI,EHxPA,AFDA,AKyPA,EJzPI,AKFR,GLEW,ECCA,ACHK,AHEZ,ACAS,CCCD,AFDR,EKyPA,CJzPa,AIyPb,CHxPA,ADDc,AKFlB,CJGiB,EDDJ,AKFb,EJGI,AFDA,CAAU,EGFd,CE2PI,CC3PJ,AD2PI,CF3PyB,AGA7B,ED2PI,ELzPA,QKyPA,QC3PJ,CAAA,sDNGgC,KAAK,CAAC,IADlC,0IAIqC,KAAK,CAAC,KAJ3C,oEAK2C,KAAK,CAAC,WALjD;AIMJ,AFJI,ACHA,AHQH,ACRa,AI2Pb,CAJD,EAAY,GFvPF,GDGC,ACHE,GAAG,CDGD,AGoPO,GAAV,IHpPD,CAAY,EGoPX,CAAA,CFvPI,CAAA,KDGQ,GGoPZ,GFvPR,CDGmB,CGoPX,CHpPqB,MAAV,AGoPX,CAAA,CHpP+B,SGoP/B,GAAU,EAAV,CAAZ;AD/OA,AFJQ,ACHJ,AFLuB,AKK3B,CLLa,GCQL,ECHE,GAAG,AGAG,EJGD,CAAC,aIHhB,CAAiC,IJGzB,GAA6B,SIHrC,EAA2D,CJGtB,qBIHrC,EAA2F,YAA3F,EAA+G,EHA9B,GAAG,CAAC,eAAxE,qCAAkH,GAAG,CAAC,sBAAtH,CAAT;ACQJ,AFJY,ACHR,AHFJ,AMEI,AD2PJ,IAAY,EC3PF,CNFV,CAAA,CGEW,AGAE,CJGG,EIHA,GHAL,CAAA,CDGY,CAAC,KFLxB,CK6PA,EF3PW,AHFX,CGEyB,CDGT,IAAsB,CAAtB,IAA2B,IFL3C,GEKkD,CAAC,MAAR,IAAkB,GAAjD,CIHR,CJIY,OAAO,CAAC,IAAI,CAAC,KAAL,CAAW,OAAO,CAAC,YAAnB,CAAD,CAAP;AEIhB,AFHS,ACLiB,AGCtB,IHDsB,CDElB,CIDE,CHDmB,EAAE,CGCjB,GAAG;AFQjB,AFHK,ACNoB,AHQzB,AMNQ,ADyPR,CAAA,EH1PW,ACDA,CDCP,ACDA,KHQY,EKmPJ,KCzPQ,aAAA,CAAA,CDyPpB,CLnPA,CAAwC,AKmPR,QLnPhC,AMNoB,CAAY,CNMuB,OMPtC;AFSjB,AFHC,ACNA,AHQG,AMNI,ADyPJ,EAAA,ILnPI,GAAG,GAAG,AMNE,ENMZ,KMRa,GD2Pb,CAAA,OAAA,CAAA,GAAA,OAAA;ADjPJ,AJDI,AMNI,ADyPJ,ELnPA,AKmPA,QLnPQ,CAAC,AMNE,ONMX,CAAiB,GKmPjB,CC5Pa,AD4Pb,MLnPkB,AKmPlB,CAAA,GAAA,GLnPiB,EAAY,CKmP7B;ADjPJ,AFhBA,ACCA,AHcQ,AMNA,ADyPJ,EAAA,ELnPI,GEfR,ACCA,AHcW,CEfX,ACCA,EHcc,GAAG,GAAG,AMNA,EJTpB,GAAA,ACCA,AGIiB,CD6Pb,CAAA,CFjQJ,ODDA,IGkQI,CAAA,CFjQJ,AHcyC,CAAC,CKmPtC,MLnP6C,CAAC,IAAT,CAAjC,AKmPJ;ADjPJ,AJDK,AMNG,ADyPJ,EAAA,CLrPA,YMJe,ODyPf,CAAA,cAAA,CAAA,GAAA,cAAA;ADjPJ,AFLA,AFII,AMZa,AD+PhB,CALD,CL9OI,CMZA,AD0PQ,MHlPI,AFIZ,CAAA,SAAA,CEJJ,AFIc,CEJiB,EGkPC,GAApB,CHlPZ,EAA+C,AFI3C,GAAsB,CK8Od,CAAA,KL9Oc,CAAA,SAAA,CAAU,IK8OxB,KL9Oc,AK8Od,GL9OoC,GAA5C,CK8OQ,CAAA,oBAAA,GAAoB,EAApB,CAAZ;AD5OA,AFLI,AFIA,AMLA,ENKA,IEJM,AIDA,OJCO,GAAG,AFIF,AMLE,GAAe,CJCX,cAAJ,EAAhB;AEMJ,AFLI,AFIA,AMLI,EJCJ,AFIA,EMLI,KJCG,CAAC,IAAR,CAAa,KFIK,CEJlB,EAAqB,GIDK,EAAE,CJCD,CAAC,GAA5B,EAAiC,IAAjC,WIF+B;AFQnC,AFLI,AFIH,AMLO,EJCJ,UAAU,CAAC,OAAD,EAAU,EIDI,IJCE,CAAC,UAAjB,CAAV;AEMJ,AFLI,AIJ+B,EJI/B,CIJA,MJIO,CAAC,IAAR,CAAa,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,IAAtB,CAAb;AEMJ,AFLI,AFNJ,AMKI,ONLJ,CAAA,CEMW,AIDA,IJCI,EIDJ,CAAA,IJCA,CAAY,MIDZ,CAA0B,GJCb,AFNxB,GAAA,IEMuB,EAAU,MAAV,EAAoB,SFN3C;AIYA,AFLQ,AIF8B,IJE9B,AIF8B,GAAG,EAAH,EJEvB,CAAC,AIFqB,kBJE7B,GAA6B,YAAA;AEMrC,AFLY,AFEZ,AML2C,IAAA,IAAI,CNKtC,CEFO,AIH2B,IAAN,GJGd,CAAC,SFExB,CEFgB,EFEW,EEFW,CAAtB,IAA2B,OAAO,CAAC,MAAR,IAAkB,GAAjD,EACI,OAAO,CAAC,IAAI,CAAC,KAAL,CAAW,OAAO,CAAC,YAAnB,CAAD,CAAP;AEKhB,AFJS,AFCL,AMN6C,ENM7C,EMN6C,CJEzC,IFIJ,CAAA,IMNuD,EAAV,GNM7C,CAAU,SAAV,GAAsB,OAAA,CAAA,SAAA,CAAU,YAAhC;AIIJ,AFJK,AFCJ,AMPoC,GJC1B,AIDA,CJCP,AIDA;AFWJ,AFJC,AINA;AFWD,AJHA,SAAgB,cAAhB,GAA8B;AII9B,AFjBA,AFcI,AMxBJ,ENwBI,KEdJ,AIVA,CJUA,AIVA,CNwBI,CAAA,SEdJ,CFcI,CAAW,CEdf,EIVA,ENwBI,CMxBJ,ENwBuB,EAAnB,EEdJ,UIVA;AF4BA,AJHC;AIID,AFLA,AINA,SJMS,AINO,UJMhB,CAAoB,OAApB,EAA6C,UAA7C,EAAoE,WINpE,CAA4D,gBAA5D,EAAuG,cAAvG,EAAgI,iBAAhI,EAAkJ;AFYlJ,AFLI,AFFJ,AMHI,MJKG,CAAC,AFFR,CAAA,CMHW,QJKP,EAAe,GFFnB,GAAA,AMH2B,CAAC,GAAjB,CAAqB,SNGhC,CMHiC,OAAD,EAAiC,KAAjC,EAA0C;AFW1E,AFLQ,AILA,QAAM,MAAM,GAAG,KAAK,KAAK,gBAAgB,CAAC,MAAjB,GAA0B,CAAnD;AFWR,AFLK,AFCL,AMNQ,QAAI,CNMH,UMNc,GAAA,MAAA,CAAA,CNMvB,CAA+B,IAA/B,AMNuB,CAAA,CNMY,KMNZ,CAAA,MAAA,CAAA,EAAA,EACR,OADQ,CAAA,EACD;AFUtB,AJJI,AOjCJ,AD4BY,IC5BZ,ED4BY,GC5BZ,GAAA,OAAA,CAAA,AD4B0B,EAAd,KC5BZ,CAAA,QD2BsB,8GNQqB,IAFvC;AIKJ,AFNI,AFMH,AMTW,EJGR,IIHQ,IAAI,EJGF,AIHI,GJGJ,CIHQ,CAAC,GAAL,CJGJ,CAAA,AILQ,MJKR,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACH,UADG,CAAA,EACO;AEMrB,AFLQ,AKjCR,AD6BY,IC7BZ,ED6BY,WC7BZ,GLiCwB,AKjCxB,ED6B4B,EAAE,GC7B9B,CAAA,AD0BsB,eC1BtB,CAAA;AHuCA,AFPqB,AIFT,GJCE,CAAV,EIDQ,UAAU,EAAE,KAJF;AFctB,AFLI,AKjCJ,AD6BY,EJIR,IIJQ,CC7BZ,CLiCU,AKjCV,CLiCW,GIJO,CJId,CAAY,AIJJ,MALU,IJSlB,EAAwB,OAAxB,CAAgC,GKjCpC,CAAA,MLiCqC,GAAD,EAAQ;AEM5C,AFLQ,AIJI,MAAA,EJIE,GAAG,GAAG,SIJS,CJIC,CAAC,AI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":"main.c39d6dcf.js","sourceRoot":"..\\src","sourcesContent":["export const $chatInput = document.getElementById('chat-input') as HTMLInputElement;\r\nexport const $botIntro = document.getElementById('botIntro');\r\nexport const $chatBody = document.getElementById('body');\r\n\r\nexport function setIntroDetails(intro: { logo: string, title: string, description: string }) {\r\n    $botIntro.innerHTML = `<span class=\"bot-logo\">\r\n                    <img src=\"${intro.logo}\" alt=\"\">\r\n                </span>\r\n                <div class=\"bot-details\">\r\n                    <div class=\"title\">${intro.title}</div>\r\n                    <div class=\"description\">${intro.description}</div>\r\n                </div>`;\r\n}\r\n\r\nexport function AppendMessageInChatBody(messages: any[]) {\r\n    let str = \"\";\r\n    messages.forEach((message) => {\r\n        str = str + getBotMessageTemplate(message.text);\r\n    });\r\n    $chatBody.innerHTML = $chatBody.innerHTML + str;\r\n    resetChatInput();\r\n    scrollBodyToBottom();\r\n}\r\n\r\nfunction scrollBodyToBottom(){\r\n    $chatBody.scrollTop = $chatBody.scrollHeight\r\n}\r\n\r\nexport function resetChatInput() {\r\n    $chatInput.value = \"\"\r\n}\r\n\r\n\r\nfunction getBotMessageTemplate(text) {\r\n    return `<div class=\"message-container\">\r\n                <div class=\"message-wrapper\">\r\n                    <div class=\"content\">${text}</div>\r\n                </div>\r\n            </div>`\r\n}\r\n\r\n","export const environment = {\r\n    bot_access_token: null,\r\n    bot_unique_name: \"FAQLogic\",\r\n    enterprise_unique_name: \"ayeshreddy.k\",\r\n    consumer: {\r\n        uid: Date.now()\r\n    }\r\n};\r\n","import {IGetReq, IHeaderData, IPostReq} from \"./typings/http\";\r\n\r\nexport function makeGetReq<T>(reqObj: IGetReq): Promise<T> {\r\n    const xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open(\"GET\", reqObj.url, true); // true for asynchronous\r\n    setHeaders(xmlHttp, reqObj.headerData);\r\n    xmlHttp.send(null);\r\n    return new Promise((resolve, reject) => {\r\n        xmlHttp.onreadystatechange = function () {\r\n            if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\r\n                resolve(JSON.parse(xmlHttp.responseText));\r\n        }\r\n    })\r\n}\r\n\r\nexport function makePostReq<T>(reqObj: IPostReq): Promise<T> {\r\n    const xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open(\"POST\", reqObj.url, true); // true for asynchronous\r\n    setHeaders(xmlHttp, reqObj.headerData);\r\n    xmlHttp.send(JSON.stringify(reqObj.body));\r\n    return new Promise((resolve, reject) => {\r\n        xmlHttp.onreadystatechange = function () {\r\n            if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\r\n                resolve(JSON.parse(xmlHttp.responseText));\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction setHeaders(xmlHttp: XMLHttpRequest, headerData: IHeaderData) {\r\n    if(!headerData){\r\n        return;\r\n    }\r\n    headerData = {\r\n        ...headerData,\r\n        'content-type': 'application/json'\r\n    }\r\n    Object.keys(headerData).forEach((key) => {\r\n        const val = headerData[key];\r\n        if (val) {\r\n            xmlHttp.setRequestHeader(key, val);\r\n        }\r\n    })\r\n}\r\n","import {environment} from \"./environment\";\r\nimport {makeGetReq} from \"./ajax\";\r\n\r\nexport function getBotDetails<T>():Promise<T> {\r\n    const env = environment;\r\n    const url = `https://staging.imibot.ai/api/v1/bot/preview/?bot_unique_name=${env.bot_unique_name}&enterprise_unique_name=${env.enterprise_unique_name}`;\r\n    return makeGetReq<T>({url: url});\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export interface ISendApiReq {\r\n    \"consumer\": {\r\n        \"uid\": string\r\n    },\r\n    \"type\": \"human\" | \"bot\",\r\n    \"msg\": string,\r\n    \"platform\": \"web\",\r\n    \"is_test\": false\r\n}\r\n\r\nexport interface ISendApiResp {\r\n    \"TimeStamp\": 1567167604976,\r\n    \"bot_message_id\": 750126,\r\n    \"bot_msg\": \"\",\r\n    \"extra_params\": {},\r\n    \"extras\": {},\r\n    \"generated_msg\": IGeneratedMessageItem,\r\n    \"messageStore\": {\r\n        \"agent_handover_by_rules\": true,\r\n        \"corpus_id\": 183,\r\n        \"n_sections\": [\r\n            {\r\n                \"first_question\": \"What can you do?\",\r\n                \"score\": 0,\r\n                \"section_id\": \"help\"\r\n            },\r\n            {\r\n                \"first_question\": \"Talk to an agent\",\r\n                \"score\": 0,\r\n                \"section_id\": \"agent\"\r\n            },\r\n            {\r\n                \"first_question\": \"hi\",\r\n                \"score\": 0,\r\n                \"section_id\": \"3\"\r\n            }\r\n        ],\r\n        \"partial_match_sections\": [],\r\n        \"response_type\": \"\",\r\n        \"sendtoagent\": true,\r\n        \"thresholding_scores\": {\r\n            \"n_results\": 3,\r\n            \"threshold_diff_score\": 0.05,\r\n            \"threshold_min_score\": 0.3\r\n        },\r\n        \"top_match_section\": {\r\n            \"first_question\": \"Fallback Message\",\r\n            \"score\": 0,\r\n            \"section_id\": \"fallback\"\r\n        }\r\n    },\r\n    \"partial_match\": false,\r\n    \"platform\": \"web\",\r\n    \"progressive\": false,\r\n    \"response_flag\": true,\r\n    \"room\": {\r\n        \"_id\": \"5d6914615f6218003a58df90\",\r\n        \"agent_handover\": false,\r\n        \"agent_handover_rules_count\": {\r\n            \"consecutive_count\": 0,\r\n            \"fallback_count\": 0,\r\n            \"last_triggered\": \"\",\r\n            \"partial_match_count\": 0\r\n        },\r\n        \"allow_anonymization\": false,\r\n        \"bot_disabled\": false,\r\n        \"bot_id\": 579,\r\n        \"callback\": false,\r\n        \"channels\": [\r\n            \"web\"\r\n        ],\r\n        \"consent_permissions\": [],\r\n        \"consumer_id\": 51598,\r\n        \"created_at\": 1567167585592,\r\n        \"cross_retention_period\": false,\r\n        \"data_store\": {},\r\n        \"df_state\": {},\r\n        \"downvoted_message_count\": 0,\r\n        \"error_message_count\": 0,\r\n        \"feedback_count\": {\r\n            \"downvote\": 0,\r\n            \"upvote\": 0\r\n        },\r\n        \"id\": 178123,\r\n        \"imichat_agent\": {},\r\n        \"imiconnect_conversation_id\": \"\",\r\n        \"is_anonymized\": false,\r\n        \"is_test\": true,\r\n        \"last_message_time\": \"2019-08-30T12:20:04.972483\",\r\n        \"last_updated_job_id\": \"5d6914745d2301cf1b2f3e22\",\r\n        \"manager_bot_room_id\": 0,\r\n        \"message_count\": {\r\n            \"agent\": 0,\r\n            \"bot\": 3,\r\n            \"total\": 5,\r\n            \"user\": 2\r\n        },\r\n        \"room_state_closed\": false,\r\n        \"selected_avatar\": {},\r\n        \"sendtoagent_count\": 1,\r\n        \"session_id\": \"\",\r\n        \"total_message_count\": 5,\r\n        \"updated_at\": 1567167604972,\r\n        \"upvoted_message_count\": 0\r\n    },\r\n    \"section_matched\": [\r\n        {\r\n            \"first_question\": \"Fallback Message\",\r\n            \"score\": 0,\r\n            \"section_id\": \"fallback\"\r\n        }\r\n    ],\r\n    \"sendtoagent\": true,\r\n    \"thresholding_scores\": {\r\n        \"n_results\": 3,\r\n        \"threshold_diff_score\": 0.05,\r\n        \"threshold_min_score\": 0.3\r\n    },\r\n    \"transaction_id\": \"27095eaec4624e63bab672d9e9002771\"\r\n}\r\n\r\n/*from bot project*/\r\n\r\n\r\nexport interface ISendApiRequestPayload {\r\n    'bot_id': string;\r\n    'consumer': {\r\n        '_id'?: string,\r\n        'botId': string,\r\n        'consentAcknowledged': boolean,\r\n        'consentPermissions': any[],\r\n        'consumerDataStore': object,\r\n        'created_at': string,\r\n        'email': string,\r\n        'extra_params': string,\r\n        'facebookId': string,\r\n        'lineId': string,\r\n        'name': string,\r\n        'phone': string,\r\n        'skypeId': string,\r\n        'uid': string,\r\n        'updated_at': string\r\n    };\r\n\r\n    'type': string;\r\n    'msg': string;\r\n    'platform': string;\r\n}\r\n\r\nexport interface IGeneratedMessageItem {\r\n    'text'?: string;\r\n    bot_message_id: number;\r\n    'media'?: any;\r\n    // {\r\n    //   'buttons': [\r\n    //     {\r\n    //       'title': 'URL Button',\r\n    //       'type': 'web_url', //title\r\n    //       'url': 'https://www.messenger.com/'/*TODO: we are not getting payload*/\r\n    //     }\r\n    //     ],\r\n    //   'title': 'this is sample text for image ,it is optional', //use this\r\n    //   'type': EBotMessageMediaType//\"image\",//use this\r\n    //   'url': 'https://wallpaperbrowse.com/media/images/soap-bubble-1958650_960_720.jpg'//use this\r\n    //   'video_url': string\r\n    //   'audio_url': string\r\n    //   'image_url': string\r\n    // }[],\r\n\r\n    quick_reply?: {\r\n        'quick_replies': [\r\n            {\r\n                'content_type': 'text',\r\n                'payload': 'Play Game',\r\n                'title': 'Play Game'\r\n            }],\r\n        'text': 'Do you want to play game or validate coupon?<br>Select any'\r\n    };\r\n\r\n}\r\n\r\nexport interface ISendApiResponsePayload {\r\n    'TimeStamp': 1533902788.0;\r\n    'bot_msg': string;\r\n    bot_message_id: number;\r\n    'generated_msg': IGeneratedMessageItem[];\r\n    'messageStore': { 'endflow': true, 'templateKey': 'A1', response_language:string };\r\n    'room': {\r\n        'agent_handover': false,\r\n        'allow_anonymization': false,\r\n        'bot_id': number// 1,\r\n        'consent_permissions': any[],\r\n        'consumer_id': number, // 43,\r\n        'cross_retention_period': false,\r\n        'data_store': {},\r\n        'df_state': {\r\n            'answer': 'hi', 'question': 'hi'\r\n        },\r\n        'id': number,\r\n        'imichat_agent': {},\r\n        'is_anonymized': false,\r\n        'last_updated_job_id': '5b6d7fc4736453000587246a',\r\n        'manager_bot_room_id': 0,\r\n        'resource_uri': '/api/v1/room/64/',\r\n        'room_state_closed': false,\r\n        'selected_avatar': any\r\n    };\r\n    'sendtoagent': false;\r\n    'templateKey': 'A1';\r\n    'transaction_id': '79f2707b0d2c419198febf0ccaaa4b99';\r\n    // 'generated_msg': [{\r\n    //     'text': string\r\n    //   }],\r\n    // 'room': {\r\n    //   '_id': string,\r\n    //   'agentHandOver': false,\r\n    //   'botId': number,\r\n    //   'consentAcknowledged': true,\r\n    //   'consumerId': {\r\n    //     '_id': string,\r\n    //     'botId': string,\r\n    //     'consentAcknowledged': true,\r\n    //     'consentPermissions': {\r\n    //         'permission': string,\r\n    //         'status': string\r\n    //       }[],\r\n    //     'consumerDataStore': {},\r\n    //     'created_at': string,\r\n    //     'email': string,\r\n    //     'extra_params': string,\r\n    //     'facebookId': string,\r\n    //     'lineId': string,\r\n    //     'name': string,\r\n    //     'phone': string,\r\n    //     'skypeId': string,\r\n    //     'uid': string,\r\n    //     'updated_at': string\r\n    //   },\r\n    //   'created_at': string,\r\n    //   'managerBotRoomId': null,\r\n    //   'room_state_closed': false,\r\n    //   'bot': {\r\n    //     'roomId': 1,\r\n    //     'imageUrl': string,\r\n    //     'name': string\r\n    //   },\r\n    //   'updated_at': string\r\n    // },\r\n    // 'transaction_id': string\r\n}\r\n\r\nexport enum EChatFrame {\r\n    WELCOME_BOX = 'WELCOME_BOX',\r\n    CHAT_LIST = 'CHAT_LIST',\r\n    CHAT_BOX = 'CHAT_BOX',\r\n}\r\n\r\nexport enum EBotMessageMediaType {\r\n    image = 'image',\r\n    text = 'text',\r\n    quickReply = 'quickReply',\r\n    bot_thinking = 'bot_thinking'\r\n}\r\n\r\nexport interface IMessageData extends IGeneratedMessageItem {\r\n    /*custom fields*/\r\n    sourceType: string; // TODO: \"timePeriod\" ||\"human\", gives error, see why\r\n    time: number;\r\n    messageMediatype: EBotMessageMediaType;\r\n    bot_message_id: number;\r\n    feedback?: any;\r\n    isLast?: boolean;\r\n    response_language?: string;\r\n}\r\n","import {makePostReq} from \"./ajax\";\r\nimport {environment} from \"./environment\";\r\nimport {IHeaderData} from \"./typings/http\";\r\nimport {EBotMessageMediaType, IGeneratedMessageItem, IMessageData, ISendApiResp} from \"./typings/send-api\";\r\n\r\nexport function sendMessageToBot(bot_access_token: string, enterprise_unique_name: string, humanMessage: string): Promise<ISendApiResp> {\r\n    const url = 'https://staging.imibot.ai/api/v1/webhook/web/';\r\n    const body = {\r\n        \"consumer\": environment.consumer,\r\n        \"type\": \"human\",\r\n        \"msg\": humanMessage,\r\n        \"platform\": \"web\",\r\n        \"is_test\": false\r\n    };\r\n\r\n    const headerData:IHeaderData = {\r\n        enterprise_unique_name: enterprise_unique_name,\r\n        \"bot-access-token\": bot_access_token\r\n    }\r\n    return makePostReq<ISendApiResp>({url, body, headerData})\r\n}\r\n\r\n\r\nexport function serializeGeneratedMessagesToPreviewMessages(generatedMessage: IGeneratedMessageItem[], bot_message_id?: number, response_language?): IMessageData[] {\r\n\r\n    return generatedMessage.map((message: IGeneratedMessageItem, index) => {\r\n        const isLast = index === generatedMessage.length - 1;\r\n        let messageData: IMessageData = {\r\n            ...message,\r\n            bot_message_id,\r\n            time: Date.now(),\r\n            messageMediatype: null,\r\n            sourceType: 'bot',\r\n            isLast,\r\n            response_language\r\n        };\r\n\r\n        if (Object.keys(message)[0] === 'media') {\r\n            messageData = {\r\n                ...messageData,\r\n                messageMediatype: message.media[0] && message.media[0].type,\r\n                text: EBotMessageMediaType.image, // this is for preview of last message in chat room list,\r\n            };\r\n        } else if (Object.keys(message)[0] === 'quick_reply') {\r\n            messageData = {\r\n                ...messageData,\r\n                messageMediatype: EBotMessageMediaType.quickReply, //\r\n                text: (<any>message).quick_reply.text || EBotMessageMediaType.quickReply, // this is for preview of last message in chat room list\r\n            };\r\n        } else {\r\n            /*if message type = text*/\r\n            messageData = {\r\n                ...messageData,\r\n                messageMediatype: EBotMessageMediaType.text,\r\n            };\r\n        }\r\n\r\n        return messageData;\r\n\r\n\r\n    });\r\n}\r\n\r\n","import {makeGetReq} from \"./ajax\";\r\nimport {$chatInput, AppendMessageInChatBody, setIntroDetails} from \"./dom\";\r\nimport {getBotDetails} from \"./bot-details\";\r\nimport {IBotDetailsApiResp} from \"./typings/bot-detaills-api\";\r\nimport 'regenerator-runtime/runtime'\r\nimport {sendMessageToBot, serializeGeneratedMessagesToPreviewMessages} from \"./send-api\";\r\nimport {environment} from \"./environment\";\r\nimport {IMessageData} from \"./typings/send-api\";\r\n\r\nasync function initApp() {\r\n    initEvents();\r\n    const botDetails = await getBotDetails<IBotDetailsApiResp>();\r\n    environment.bot_access_token = botDetails.bot_access_token;\r\n    setIntroDetails({description: botDetails.description, logo: botDetails.logo, title: botDetails.name});\r\n}\r\n\r\n\r\nfunction initEvents() {\r\n    $chatInput.addEventListener('keypress', async function ($event: KeyboardEvent) {\r\n        if ($event.key === 'Enter') {\r\n            let humanMessage = $chatInput.value;\r\n            AppendMessageInChatBody([{\r\n                sourceType: \"bot\",\r\n                text: humanMessage,\r\n                time: Date.now()\r\n            }]);\r\n            const botResponse = await sendMessageToBot(environment.bot_access_token, environment.enterprise_unique_name, humanMessage)\r\n            let messageData: any = serializeGeneratedMessagesToPreviewMessages(botResponse.generated_msg);\r\n            debugger;\r\n            AppendMessageInChatBody(messageData);\r\n        }\r\n    })\r\n}\r\n\r\n\r\ninitApp().then(_ => console.log('app init success'));\r\n"]}